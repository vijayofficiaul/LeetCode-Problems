// Problem 118: Pascal's Triangle
// Link: https://leetcode.com/problems/pascals-triangle/description/?envType=problem-list-v2&envId=vmgzc3ut
// Approach: Using Collections - 2D - ArrayList


import java.util.ArrayList;
import java.util.List;

public class pascalTriangle{
    public static void main(String[] args) {
        int numRows = 1;
        System.out.println(generate(numRows));
    }
    
    public static List<List<Integer>> generate(int numRows) {

        List<List<Integer>> outerList = new ArrayList<>();

        for(int i=0; i<numRows; i++){

            List<Integer> innerList = new ArrayList<>();

            for(int j=0; j<=i; j++){

                if(j == i){
                    innerList.add(j, 1);
                }else if(j == 0){
                    innerList.add(j, 1);
                    
                }else{

                    if(i>=2){
                        if( j != 0 && j != i){
                            int sum = 0;
                            int start = j-1;
                            int end = j;
                            for(int k=start; k<end; k++){

                                sum = outerList.get(i-1).get(k) + outerList.get(i-1).get(k+1);

                                System.out.println(sum);

                            }
                            innerList.add(j, sum);
                            
                        }
                    }
                }

            }
            outerList.add(innerList);
        }
        

        return outerList;
        
    }
}
